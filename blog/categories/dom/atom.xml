<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dom | 小毛的胡思乱想]]></title>
  <link href="http://mccxj.github.com/blog/categories/dom/atom.xml" rel="self"/>
  <link href="http://mccxj.github.com/"/>
  <updated>2014-03-05T22:23:25+08:00</updated>
  <id>http://mccxj.github.com/</id>
  <author>
    <name><![CDATA[蔡晓建]]></name>
    <email><![CDATA[mc02cxj@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dom操作和渲染并不是同步的]]></title>
    <link href="http://mccxj.github.com/blog/20130807_dom-operation-is-not-sync.html"/>
    <updated>2013-08-07T00:00:00+08:00</updated>
    <id>http://mccxj.github.com/blog/dom-operation-is-not-sync</id>
    <content type="html"><![CDATA[<h3>一个在ie6不兼容的线上问题</h3>

<p>昨天，有同事找我看一个线上问题，说一个在ie8测试通过的功能，在ie6上不能正常使用。
一开始，他用alert定位到是哪部分代码出问题，并认为后面有部分代码没有执行。奇怪的是，在这中间加上alert语句的话，
在ie6上也是能够正常运行的。</p>

<p>这部分代码简化后大概是这样的:</p>

<p><code>html
&lt;select onclick="javascript:selectbank(this);"&gt;
&lt;option value=""&gt;--all--&lt;/option&gt;
&lt;/select&gt;
</code></p>

<p><code>javascript
function(obj){
  // get val and desc from a pop up page
  var opt = "&lt;option value='" + val + "'&gt;" + desc + "&lt;/option&gt;";
  $(obj).append(opt);
  $(obj).val(val);
  // alert("test");
  // ...
}
</code></p>

<p>我发现没有加alert的时候，页面会报js错误。并且，这种情况在ie8不会出现。</p>

<h3>Dom操作和渲染并不是同步的</h3>

<p>为什么会出现这种情况，这主要因为Dom操作比普通js操作的消耗大很多，因为它需要改变页面元素，
导致页面出现重新渲染的情况，这取决于浏览器的实现。像ie8等比较高级的浏览器，渲染、js速度都要快许多，
所以不会出现这种情况。而ie6太慢了，很可能还没反应过来。</p>

<p>类似的情况是，在一个js调用过程中(某次事件)，如果你频繁修改dom，浏览器很可能不会逐个生效，
而是几个操作一起生效，跟期望的有点不一样。在一些低端浏览器，可以做的优化是，让调用过程尽量快，
减少Dom操作，或者中间使用setTimeout休息一下。</p>

<p>而像上面的问题，修改成下面的代码就可以了:</p>

<p><code>javascript
function(obj){
  // get val and desc from a pop up page
  var opt = "&lt;option selected value='" + val + "'&gt;" + desc + "&lt;/option&gt;";
  $(obj).append(opt);
  // alert("test");
  // ...
}
</code></p>
]]></content>
  </entry>
  
</feed>
